name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ridesharing_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    # installing dependencies
    - name: Install dependencies
      working-directory: ./ride-sharing-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # running tests
    - name: Run tests with coverage
      working-directory: ./ride-sharing-backend
      env:
        DJANGO_SETTINGS_MODULE: ridesharing.settings
        SECRET_KEY: test_secret_key
        DEBUG: True
        DB_ENGINE: django.db.backends.postgresql
        DB_NAME: ridesharing_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        REDIS_URL: redis://localhost:6379/0
      run: |
        pytest --cov=. --cov-report=xml

# Build and push the Docker image to Docker Hub
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ./ride-sharing-backend
        push: true
        tags: |
          vanessa79/ride-sharing:latest
          vanessa79/ride-sharing:${{ github.sha }}

# # deploying to render.com
#   deploy-to-render:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     if: github.ref == 'refs/heads/main'
    
#     steps:
#     - name: Deploy to Render
#       env:
#         RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
#         RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
#       run: |
#         curl -X POST \
#           "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
#           -H "accept: application/json" \
#           -H "authorization: Bearer $RENDER_API_KEY" \
#           -H "content-type: application/json"
    
#     - name: Wait for deployment
#       run: |
#         echo "Waiting for deployment to complete..."
#         sleep 60  # Give Render some time to start the deployment 
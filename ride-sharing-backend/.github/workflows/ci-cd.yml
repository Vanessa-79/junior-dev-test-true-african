name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ridesharing_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run migrations
      env:
        DJANGO_SETTINGS_MODULE: ridesharing.settings
        SECRET_KEY: test_secret_key
        DEBUG: True
        DB_ENGINE: django.db.backends.postgresql
        DB_NAME: ridesharing_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
      run: python manage.py migrate
    
    - name: Run tests
      env:
        DJANGO_SETTINGS_MODULE: ridesharing.settings
        SECRET_KEY: test_secret_key
        DEBUG: True
        DB_ENGINE: django.db.backends.postgresql
        DB_NAME: ridesharing_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
      run: pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false  # Change to true if you have a Docker repository configured
        tags: |
          ride-sharing-backend:latest
          ride-sharing-backend:${{ github.sha }}

  # Uncomment and customize for actual deployment
  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  #   
  #   steps:
  #   - name: Deploy to cloud provider
  #     run: |
  #       # Add deployment commands here
  #       echo "Deploying version ${{ github.sha }}"